{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./src/about-state.js","webpack:///./src/asset-load-state.js","webpack:///./src/entry-state.js","webpack:///./src/font-load-state.js","webpack:///./src/game-over-state.js","webpack:///./src/index.js","webpack:///./src/instructions-state.js","webpack:///./src/play-state.js","webpack:///./src/prisoners-instructions-state.js","webpack:///./src/race-relations-state.js","webpack:///./src/torch-handler.js"],"names":["aboutState","game","textCrawlStyle","font","fill","align","wordWrap","wordWrapWidth","width","textCrawl","create","buttonStyle","backButton","add","text","instructionsButtonStyle","instructionsButton","world","inputEnabled","events","onInputUp","state","start","aboutText","assetLoadState","preload","sound","name","load","audio","titleStyle","centerX","centerY","anchor","set","img","spritesheet","image","window","theme","Phaser","Sound","entryState","init","optionStyle","startOption","isPlaying","play","update","fontLoadState","fontsLoaded","global","WebFontConfig","active","time","Timer","SECOND","google","families","script","gameOverState","Game","AUTO","undefined","instructionsState","instructionsTextStyle","instructionsText","backButtonStyle","racesButtonStyle","racesButton","playState","debugOn","prisonerSpawnX","playerWalkSpeed","playerClimbSpeed","races","levelYs","cellWidth","grindDuration","raceRelationsMap","player","playerState","playerLevel","playerLevelTarget","playerTargetX","ladderA","ladderB","spaceTop","spaceBottom","waitingRoomBox","gonnaClimb","amClimb","prisoners","waitingPrisoners","activePrisoner","clickedPrisoner","choppingBlock","axeGrind","cells","clickedCell","cellContents","score","scoreText","axe","axeMurderTimer","lives","choppingblockGlow","ladderGlow","cellGlow","prisonerGlow","heartSprites","axeLoader","grindProgress","grindingAxe","nextPrisonerDelay","timeSinceLastPrisoner","gateOpenSound","grindAxeSound","screamSound","swingSound","prisonMurderSound","escapeSounds","currEscapeSound","physics","startSystem","Physics","ARCADE","tileSprite","sprite","alpha","height","newCell","x","y","c","animations","push","placeTorches","setTo","scale","grindAnimation","angle","escapeSound","escapeSound2","scoreStyle","heartX","heartY","i","axeLoadingX","axeLoadingY","axeLoadingBackground","space","input","keyboard","addKey","Keyboard","SPACEBAR","debug","D","lastDebug","lastSpace","isDown","stop","updateCells","updatePlayer","updatePrisoners","newPrisonerArrival","idx","length","Math","floor","checkClickOnLadder","forEach","lad","justPressed","spawnGlow","maybeStartClimb","checkClickOnSpace","activePointer","spawnPointer","checkClickOnWaitingRoom","maybeAttendPrisoner","checkClickOnCell","b","checkClickOnChoppingBlock","isIntersect","shift","maybeExecutePrisoner","checkClickOnPrisoner","prisonerArray","prisoner","isSameFloor","maybeLockHimUp","abs","slot","indexOf","cellSprite","bringToTop","moveOver","anger","camaraderie","cellIndex","moveToTargetLadder","direction","sign","climb","climbDir","currY","targetY","moveToTargetSpace","turnOnAnimations","turnOffAnimations","moveToPrisoner","cell","prisonerIndex","otherPrisoner","doExecution","sqrt","lerp","ang","destroy","splice","updateScore","animateAxeLoading","checkClicks","stand","moveladder","moveToCell","move","moveWaitingRoom","moveToBlock","murder","moveForwardInLine","amIBumpingIntoTheNextGuyInLineAndIfSoWhoIsIt","intersectsAny","them","bideTimeInCell","hatedThings","filter","toCheck","race","helpfulThings","thing","killThisIdx","destroyPrisoner","escape","console","log","takeLife","alive","warn","entering","waitingroom","followingPlayer","thrownIn","toString","padStart","heartSprite","sections","fps","animationFps","object1","object2","lastPrisoner","random","vacateThis","findCellAndSlot","s","pris","a","Rectangle","intersects","getBounds","arrayOfThings","you","alsoSatisfy","pointer","what","setInterval","clearInterval","glow","t","id","PI","sin","from","to","amt","render","theCell","formattedResidents","map","res","join","prisonersInstructionsState","descriptions","raceButtonStyle","raceButton","startY","spriteX","nameX","descriptionX","raceName","raceRelationsState","arrowTextStyle","raceInstructions","playButtonStyle","colStartX","spriteXOffset","spriteX2Offset","arrowXOffset","prisoner2","torchHandler","torchX","torchY","torch","light"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import entryState from './entry-state';\n\nexport default function aboutState(game) {\n\n    let textCrawlStyle = { font: '10pt Press Start 2P', fill: 'white', align: 'left', wordWrap: true, wordWrapWidth: game.width-60};\n    let textCrawl = 'Premise\\n\\n'\n                    + 'The Kingdom of Fecea is asphyxiating from the nauseating fumes of crime, bankruptcy, and moral degeneracy.\\n'\n                    + 'Brigands, highway robbers, and non-humans frustrate the attempts of the Kingdom\\'s law enforcement to maintain order.\\n\\n'\n                    + 'In the bowels of the Kingdom\\'s most infamous gaol, you are Thelonious, the lone executioner.\\n\\n'\n                    + 'Your goal: prevent the prison from overflowing, while remaining carefully within the law (which permits spontaneous executions).';\n\n    return {\n        create: function() {\n            let buttonStyle = { font: '10pt Press Start 2P', fill: '#FFFFFF', align: 'left'};\n            let backButton = game.add.text(60, 30, '< Back', buttonStyle);\n\n            let instructionsButtonStyle = { font: '10pt Press Start 2P', fill: '#FFFFFF', align: 'right'};\n            let instructionsButton = game.add.text(game.world.width - 240, 30, 'Instructions >', instructionsButtonStyle);\n\n            backButton.inputEnabled = true;\n            backButton.events.onInputUp.add(function () {\n                game.state.start('Entry');\n            });\n\n            instructionsButton.inputEnabled = true;\n            instructionsButton.events.onInputUp.add(() => {\n                game.state.start('Instructions');\n            });\n\n            let aboutText = game.add.text(60, 90, textCrawl, textCrawlStyle);\n        }\n    };\n\n};\n","export default function assetLoadState(game) {\n\n    function preload() {\n        const sound = (name) => `src/assets/sound/${name}.mp3`;\n        game.load.audio('theme', sound('theme'));\n        game.load.audio('gateopensound', sound('gateopensound'));\n        game.load.audio('grindsound', sound('grindsound'));\n        game.load.audio('screamsound', sound('screamsound'));\n        game.load.audio('swingsound', sound('swingsound'));\n        game.load.audio('escapesound', sound('escapesound'));\n        game.load.audio('escapesound2', sound('escapesound2'));\n        game.load.audio('prisonmurdersound', sound('prisonmurdersound'));\n\n        let titleStyle = { font: '50pt Press Start 2P', fill: '#FFFFFF', align: 'center'};\n        let text = game.add.text(game.world.centerX, game.world.centerY, ' Loading...', titleStyle);\n        text.anchor.set(0.5);\n\n        const img = (name) => `src/assets/img/${name}.png`;\n        game.load.spritesheet('ogre', img('ogre'), 96/2, 72);\n        game.load.spritesheet('player', img('player'), 64/2, 64);\n        game.load.image('bg', img('bgfull'));\n        game.load.spritesheet('elf', img('elf'), 64/2, 64);\n        game.load.spritesheet('hobbit', img('hobbit'), 64/2, 32);\n        game.load.spritesheet('usurper', img('usurper'), 64/2, 64);\n        game.load.spritesheet('rebel', img('rebel'), 64/2, 64);\n        game.load.spritesheet('goblin', img('goblin'), 64/2, 32);\n        game.load.image('ladder', img('ladderglow'));\n        game.load.image('capturebox', img('capturebox'));\n        game.load.spritesheet('torch', img('torch'), 8, 16);\n        game.load.image('pointer', img('pointer'));\n        game.load.image('choppingblock', img('choppingblock'));\n        game.load.spritesheet('bars', img('bars'), 426/3, 100);\n        game.load.spritesheet('glowbars', img('glowbars'), 426/3, 100);\n        game.load.image('glow', img('glow'));\n        game.load.image('axe', img('axe'));\n        game.load.image('heart', img('heart'));\n        game.load.image('choppingblockglow', img('choppingblockglow'));\n        game.load.spritesheet('axegrind', img('axegrind'), 112/2, 48);\n        game.load.spritesheet('axeloading', img('axeloading'), 72, 25);\n\n        \n           \n        window.theme = new Phaser.Sound(game, 'theme', 2, true); \n    }\n\n    function create() {\n        game.state.start('Entry');\n    }\n\n    return {preload, create};\n\n}","export default function entryState(game) {\n    return {\n        preload: function() {\n            \n        },\n\n        init: function() {\n        },\n \n        create: function() {\n            \n            let titleStyle = { font: '50pt Press Start 2P', fill: '#FFFFFF', align: 'center'};\n            let text = game.add.text(game.world.centerX, 100, 'Due Process', titleStyle);\n            text.anchor.set(0.5);\n\n            var optionStyle = { font: '30pt Press Start 2P', fill: 'white', align: 'left' };\n            var startOption = game.add.text(30, 280, 'Start', optionStyle);\n\n            startOption.inputEnabled = true;\n            startOption.events.onInputUp.add(function () {\n                game.state.start('About');\n            });\n            if(!window.theme.isPlaying) {\n                window.theme.play();\n            }\n\n            // RESTART this state because FOR SOME REASON\n            // the THEMESONG only plays the second time the state is entered\n            // *enraged screaming ensues*\n            game.state.start('Entry');\n        },\n\n        update: function() {\n            \n        }\n    }\n};\n","export default function fontLoadState(game) {\n\n    window.fontsLoaded = function() {\n        game.state.start('AssetLoad');\n    }\n\n    return {\n        preload: function() {\n            //  The Google WebFont Loader will look for this object, so create it before loading the script.\n            global.WebFontConfig = {\n\n                //  'active' means all requested fonts have finished loading\n                //  We set a 1 second delay before calling 'createText'.\n                //  For some reason if we don't the browser cannot render the text the first time it's created.\n                active: function() {\n                    game.time.events.add(Phaser.Timer.SECOND, fontsLoaded, this);\n                },\n\n                //  The Google Fonts we want to load (specify as many as you like in the array)\n                google: {\n                    families: ['Press Start 2P']\n                }\n            };\n\n            //  Load the Google WebFont Loader script\n            game.load.script('webfont', '//ajax.googleapis.com/ajax/libs/webfont/1.4.7/webfont.js');\n        }\n    };\n\n}\n","export default function gameOverState(game) {\n\n    function create() {\n        let titleStyle = { font: '50pt Press Start 2P', fill: '#FFFFFF', align: 'center'};\n        let text = game.add.text(game.world.centerX, game.world.centerY, 'Game Over', titleStyle);\n        text.anchor.set(0.5);\n\n        let buttonStyle = { font: '10pt Press Start 2P', fill: '#FFFFFF', align: 'left'};\n        let backButton = game.add.text(60, 30, '< Back', buttonStyle);\n\n        backButton.inputEnabled = true;\n        backButton.events.onInputUp.add(function () {\n                game.state.start('Entry');\n        });\n    }\n    \n    return {create};\n}","import fontLoadState from './font-load-state';\nimport assetLoadState from './asset-load-state';\nimport playState from './play-state'; // initialize the play state in entry state to reset all the variables in play state\nimport entryState from './entry-state';\nimport aboutState from './about-state';\nimport gameOverState from './game-over-state';\nimport raceRelationsState from './race-relations-state';\n\nimport instructionsState from './instructions-state';\nimport prisonersInstructionsState from './prisoners-instructions-state';\n\nconst game = new Phaser.Game(960, 540, Phaser.AUTO, 'game', undefined, undefined, false);\ngame.state.add('FontLoad', fontLoadState(game));\ngame.state.add('AssetLoad', assetLoadState(game));\ngame.state.add('Entry', entryState(game));\ngame.state.add('About', aboutState(game));\ngame.state.add('GameOver', gameOverState(game));\ngame.state.add('Instructions', instructionsState(game));\ngame.state.add('Prisoners', prisonersInstructionsState(game));\ngame.state.add('Races', raceRelationsState(game));\ngame.state.start('FontLoad');\n","export default function instructionsState(game) {\n\n    let instructionsTextStyle = { font: '10pt Press Start 2P', fill: 'white', align: 'left', wordWrap: true, wordWrapWidth: game.width-60};\n    let instructionsText = 'Gain points for every prisoner who dies!!!\\n\\n'\n                         + '1. Move by left clicking.\\n\\n'\n                         + '2. Prisoners will queue up by the door. Click on them to attend to them.\\n\\n'\n                         + '3. While attending to a prisoner, you can escort them to a cell or to the chopping block.\\n\\n'\n                         + '4. Cells can hold two prisoners, and they interact with each other. Some prisoners kill each other (good),'\n                         + 'but if two prisoners of the same type share a cell for too long, they can escape (bad)!\\n\\n'\n                         + '5. Each prisoner who escapes takes one of your lives with them!\\n\\n'\n                         + '6. The chopping block requires the axe to be sharpened after each use (its availability can be seen at the top).';\n\n    function create() {\n        let backButtonStyle = { font: '10pt Press Start 2P', fill: '#FFFFFF', align: 'left'};\n        let backButton = game.add.text(60, 30, '< Back', backButtonStyle);\n\n        let racesButtonStyle = { font: '10pt Press Start 2P', fill: '#FFFFFF', align: 'left'};\n        let racesButton = game.add.text(game.world.width - 240, 30, 'Prisoners >', racesButtonStyle);\n\n        backButton.inputEnabled = true;\n        backButton.events.onInputUp.add(function () {\n            game.state.start('About');\n        });\n\n        racesButton.inputEnabled = true;\n        racesButton.events.onInputUp.add(() => {\n            game.state.start('Prisoners');\n        });\n\n        game.add.text(60, 90, instructionsText, instructionsTextStyle);\n    }\n\n    return {create};\n}","import torchHandler from './torch-handler'\n\nexport default function playState(game) {\n    const debugOn = false;\n\n\n    const prisonerSpawnX = 200;\n    const playerWalkSpeed = 250/60;\n    const playerClimbSpeed = 300/60;\n    const races = [ 'elf', 'hobbit', 'usurper', 'rebel', 'goblin', 'ogre' ];\n    const levelYs = [ 175, 330 ];\n    const cellWidth = 142;\n    const grindDuration = 360;\n\n    // 'race': [things it hates]\n    const raceRelationsMap = {\n        'goblin': 'elf', // goblins hate elves, a hatred as old as the two races\n        'elf': 'rebel', // elves are nobler than rebels, causing the rebels to instigate a fight they can't win\n        'rebel': 'usurper', // rebels hate bourgeois usurpers; class struggle is real\n        'usurper': 'ogre', // usurpers dominate ogres; their commanding presence whittles away at the ogre\n        'ogre': 'hobbit', // ogres eat hobbits, and they are hungry\n        'hobbit': 'goblin', // hobbits outsmart goblins\n    };\n\n    let player;\n    let playerState = \"stand\"; // stand, moveladder, climb, move, dead\n    let playerLevel = 0; // 0=top floor, 1=next floor down\n    let playerLevelTarget = 0;\n    let playerTargetX;\n    let ladderA, ladderB;\n    let spaceTop, spaceBottom, waitingRoomBox;\n    let gonnaClimb; // which ladder you're heading to climb\n    let amClimb; // currently climbing\n    let prisoners = []; // every prisoner, regardless of their `state`, lives here\n    let waitingPrisoners = [];\n    let activePrisoner;\n    let clickedPrisoner;\n    let choppingBlock;\n    let axeGrind;\n    let cells = [];\n    let clickedCell;\n    let cellContents = [[null, null],[null, null],[null, null],[null, null],[null, null],[null, null]];\n    let score = 0;\n    let scoreText;\n    let axe;\n    let axeMurderTimer = 0;\n    let lives = 8;\n    let choppingblockGlow, ladderGlow, cellGlow, prisonerGlow;\n    let heartSprites = [];\n    let axeLoader;\n    let grindProgress = grindDuration;\n    let grindingAxe;\n    let nextPrisonerDelay = 360; // frames till next prisoner\n    let timeSinceLastPrisoner = 120;\n\n    // sounds\n    let gateOpenSound;\n    let grindAxeSound;\n    let screamSound;\n    let swingSound;\n    let prisonMurderSound;\n\n    let escapeSounds = []; let currEscapeSound = 0;\n\n    function preload() {\n\n    }\n\n    function create() {\n        game.physics.startSystem(Phaser.Physics.ARCADE);\n\n        game.add.tileSprite(0, 0, 960, 540, 'bg');\n\n        // click-to-move areas\n        spaceTop = game.add.sprite(325, 20, 'capturebox');\n        spaceTop.alpha = 0.0;\n        spaceTop.width = 810;\n        spaceTop.height = 170;\n        spaceTop.inputEnabled = true;\n        spaceBottom = game.add.sprite(145, 200, 'capturebox');\n        spaceBottom.alpha = 0.0;\n        spaceBottom.width = 810;\n        spaceBottom.height = 170;\n        spaceBottom.inputEnabled = true;\n\n        // waiting area\n        waitingRoomBox = game.add.sprite(145, 20, 'capturebox');\n        waitingRoomBox.alpha = 0.0;\n        waitingRoomBox.width = 180;\n        waitingRoomBox.height = 170;\n        waitingRoomBox.inputEnabled = true;\n\n        // ladders\n        ladderA = game.add.sprite(327, 135, 'ladder');\n        ladderA.alpha = 0.0; // invisible ladders\n        ladderA.inputEnabled = true;\n        ladderB = game.add.sprite(905, 135, 'ladder');\n        ladderB.inputEnabled = true;\n        ladderB.alpha = 0.0;\n\n        // cells\n        const newCell = (x, y) => {\n            let c = game.add.sprite(x, y, 'bars');\n            c.animations.add('open', [0, 1, 2, 0]);\n            return c;\n        }\n        cells.push(newCell(393, 63));\n        cells.push(newCell(562, 63));\n        cells.push(newCell(732, 63));\n        cells.push(newCell(393, 223));\n        cells.push(newCell(562, 223));\n        cells.push(newCell(732, 223));\n        gateOpenSound = game.add.audio('gateopensound');\n\n        // torches\n        torchHandler(game).placeTorches();\n\n        // axe grind\n        axeGrind = game.add.sprite(200, levelYs[1], 'axegrind');\n        axeGrind.anchor.setTo(0.5, 1);\n        axeGrind.scale.setTo(1.5, 1.5);\n        let grindAnimation = axeGrind.animations.add('grind');\n        grindAxeSound = game.add.audio('grindsound');\n\n        // axe grinding - the axe that he grings :)\n        grindingAxe = game.add.sprite(200, levelYs[1] - 48, 'axe');\n        grindingAxe.alpha = 0;\n        grindingAxe.angle = -35;\n        grindingAxe.scale.x *= -1;\n\n        // chopping block\n        choppingBlock = game.add.sprite(250, levelYs[1], 'choppingblock');\n        choppingBlock.anchor.setTo(0.5, 0.7);\n        choppingBlock.inputEnabled = true;\n        swingSound = game.add.audio('swingsound');\n\n        // glows\n        ladderGlow = game.add.sprite(0,0,'ladder');\n        ladderGlow.alpha = 0;\n        cellGlow = game.add.sprite(0,0,'glowbars');\n        cellGlow.alpha = 0;\n        prisonerGlow = game.add.sprite(0,0,'glow');\n        prisonerGlow.alpha = 0;\n        choppingblockGlow = game.add.sprite(0,0,'choppingblockglow');\n        choppingblockGlow.alpha = 0;\n        choppingblockGlow.anchor.setTo(0.5, 0.7);\n\n\n        // the player\n        player = game.add.sprite(0, 0, 'player');\n        player.animations.add('walk');\n        player.anchor.setTo(0.5, 1);\n        player.x = 400;\n        player.y = levelYs[0];\n\n        // prisoner sounds\n        screamSound = game.add.audio('screamsound');\n        let escapeSound = game.add.audio('escapesound', 0.25);\n        let escapeSound2 = game.add.audio('escapesound2', 0.25);\n        escapeSounds = [escapeSound, escapeSound2];\n        prisonMurderSound = game.add.audio('prisonmurdersound');\n\n        // score\n        let scoreStyle = { font: '15pt Press Start 2P', fill: 'white', align: 'left' };\n        scoreText = game.add.text(650, 15, 'Score: 000000', scoreStyle);\n\n        // health\n        let heartX = 256;\n        let heartY = 15;\n        for(var i = 0; i < lives; ++i) {\n            heartX += 30;\n            heartSprites.push(game.add.sprite(heartX, heartY, 'heart'));\n        }\n\n        // axe loading\n        let axeLoadingX = 180;\n        let axeLoadingY = 15;\n        let axeLoadingBackground = game.add.sprite(axeLoadingX, axeLoadingY, 'axe');\n        axeLoadingBackground.alpha = 0.5;\n        axeLoadingBackground.angle = 90;\n        axeLoadingBackground.anchor.setTo(0, 1);\n        axeLoadingBackground.y = axeLoadingBackground - 4;\n\n        axeLoader = game.add.sprite(axeLoadingX, axeLoadingY, 'axeloading', 3);\n        axeLoader.animations.add('load');\n\n        space = game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\n        debug = game.input.keyboard.addKey(Phaser.Keyboard.D);\n    }\n\n    let debug;\n    let lastDebug = false;\n    let space;\n    let lastSpace = false;\n\n    function update() {\n        if (debug.isDown && !lastDebug) {\n            debugger;\n        }\n\n        grindProgress++;\n        if (grindProgress >= grindDuration) {\n            grindProgress = grindDuration;\n            axeGrind.animations.stop('grind', true);\n            grindingAxe.alpha = 0;\n        }\n\n        updateCells();\n        updatePlayer();\n        updatePrisoners();\n\n        lastDebug = debug.isDown;\n        lastSpace = space.isDown;\n\n        timeSinceLastPrisoner++;\n        if(timeSinceLastPrisoner >= nextPrisonerDelay) {\n            timeSinceLastPrisoner = 0;\n            newPrisonerArrival();\n        }\n    }\n\n    /***********************************************************************************************************\n     * object class updates\n     */\n    function updateCells() {\n        for (let idx = 0; idx < cells.length; idx++) {\n            let c = cells[idx];\n            c.inputEnabled = // to be clickable...\n                !!activePrisoner && // player must carry a prisoner\n                (Math.floor(idx/3) === playerLevel) && // and be on the same vertical level as the cell\n                playerState !== 'climb'; // and not be currently climbing away from that vertical level\n        }\n    }\n\n    function updatePlayer() {\n        const checkClickOnLadder = () => {\n            ([ladderA, ladderB]).forEach((lad) => {\n                // phaser doesn't support \"did we click it this frame?\"\n                // so instead of tracking that shit for every object\n                // we just make sure this click started no more than ~20ms ago\n                // which means this will only be true for one frame (1f @60FPS = 16ms)\n                if (lad.input.justPressed(0, 20)) {\n                    gonnaClimb = lad;\n                    playerState = \"moveladder\";\n                    spawnGlow(gonnaClimb.x, gonnaClimb.y, ladderGlow);\n                    maybeStartClimb(); // don't bother moving to a ladder if you're already there\n                }\n            });\n        };\n\n        const checkClickOnSpace = () => {\n            if ((playerLevel === 0 && spaceTop.input.justPressed(0, 20)) ||\n                (playerLevel === 1 && spaceBottom.input.justPressed(0, 20))) {\n                playerState = 'move';\n                playerTargetX = game.input.activePointer.x;\n                spawnPointer(playerTargetX, levelYs[playerLevel]);\n            }\n        };\n\n        const checkClickOnWaitingRoom = () => {\n            if(waitingRoomBox.input.justPressed(0,20) && playerLevel === 0) {\n                playerTargetX = 330;\n                playerState = 'moveWaitingRoom';\n            }\n            maybeAttendPrisoner();\n        };\n\n        const checkClickOnCell = () => {\n            for (let i = 0; i < cells.length; i++) {\n                const b = cells[i];\n                if (b.input && b.input.justPressed(0, 20)) {\n                    clickedCell = i;\n                    playerTargetX = b.x + cellWidth/2;\n                    playerState = \"moveToCell\";\n                    spawnGlow(b.x, b.y, cellGlow);\n                }\n            }\n        };\n\n        const checkClickOnChoppingBlock = () => {\n            if (grindProgress >= grindDuration && playerLevel === 1 && choppingBlock.input.justPressed(0, 20)) {\n                playerState = 'moveToBlock';\n                playerTargetX = choppingBlock.x;\n                spawnGlow(choppingBlock.x, choppingBlock.y, choppingblockGlow);\n            }\n        };\n\n        const maybeAttendPrisoner = () => {\n            if(playerState === 'moveWaitingRoom' && isIntersect(waitingRoomBox, player)\n                && !activePrisoner) {\n                if(waitingPrisoners.length > 0) {\n                    activePrisoner = waitingPrisoners.shift();\n                    activePrisoner.state = 'followingPlayer';\n                } else {\n                    playerState = 'stand';\n                }\n            }\n        };\n\n        const maybeExecutePrisoner = () => {\n            if (activePrisoner && isIntersect(player, choppingBlock)) {\n                activePrisoner.state = 'murder';\n                playerState = 'murder';\n            }\n        };\n\n        const checkClickOnPrisoner = () => {\n            cellContents.forEach((prisonerArray) => {\n                prisonerArray.forEach((prisoner) => {\n                    if (prisoner && prisoner.inputEnabled\n                        &&  isSameFloor(player, prisoner)\n                        && prisoner.input.justPressed(0, 20)) {\n                        if(!activePrisoner) {\n                            playerState = 'moveToPrisoner';\n                            clickedPrisoner = prisoner;\n                            spawnGlow(prisoner.x - 22, prisoner.y, prisonerGlow);\n                        }\n                    }\n                })\n            });\n        }\n\n        const maybeLockHimUp = () => {\n            if (Math.abs(player.x - playerTargetX) <= playerWalkSpeed * 2) {\n                // only 2 slots per cell.\n                let slot = cellContents[clickedCell].indexOf(null);\n                if (slot < 0) { return; }\n                let cellSprite = cells[clickedCell];\n                cellSprite.animations.play('open', 15, false);\n                gateOpenSound.play();\n\n                cellSprite.bringToTop();\n                player.bringToTop();\n\n                // 0 slot in this cell is the left, 1 slot is the right.\n                const moveOver = !!cellContents[clickedCell][0] ? 40 : 0;\n\n                activePrisoner.state = 'thrownIn';\n                cellContents[clickedCell][slot] = activePrisoner;\n                activePrisoner.x = cells[clickedCell].x + cellWidth / 2 + moveOver;\n                activePrisoner.y = levelYs[Math.floor(clickedCell / 3)] - 30;\n                activePrisoner.anger = 0;\n                activePrisoner.camaraderie = 0;\n                activePrisoner.cellIndex = clickedCell;\n                activePrisoner = null;\n                clickedCell = undefined;\n                playerState = 'stand';\n            }\n        };\n\n        const maybeStartClimb = () => {\n            if (isIntersect(gonnaClimb, player)) {\n                playerLevelTarget = Math.abs(1 - playerLevel); // switch between 0 and 1\n                playerState = \"climb\";\n                amClimb = gonnaClimb;\n                gonnaClimb = null;\n            }\n        };\n\n        const moveToTargetLadder = () => {\n            const direction = Math.sign(gonnaClimb.x - player.x);\n            player.x += direction * playerWalkSpeed;\n            if(activePrisoner) {\n                activePrisoner.x = player.x + direction * 48 * -1;\n                activePrisoner.y = player.y;\n            }\n\n            maybeStartClimb();\n        };\n\n        const climb = () => {\n            const climbDir = Math.sign(playerLevelTarget - playerLevel);\n            player.y += climbDir * playerClimbSpeed;\n            player.x = amClimb.centerX;\n            if(activePrisoner) {\n                activePrisoner.x = player.x;\n                activePrisoner.y = player.y + climbDir * -72;\n            }\n\n            // check if we just passed the level's Y coord\n            const currY = player.y;\n            const targetY = levelYs[playerLevelTarget];\n\n            if (climbDir === 1 && currY >= targetY ||  // down\n                climbDir === -1 && currY <= targetY ||\n                climbDir === 0) { // up\n                player.y = targetY;\n                playerLevel = playerLevelTarget;\n                playerState = \"stand\";\n                amClimb = null;\n            }\n        };\n\n        const moveToTargetSpace = () => {\n            const direction = Math.sign(playerTargetX - player.x);\n            player.x += direction * playerWalkSpeed;\n            if(activePrisoner) {\n                activePrisoner.x = player.x + direction * 48 * -1;\n                activePrisoner.y = player.y;\n            }\n\n            if (Math.abs(player.x - playerTargetX) < playerWalkSpeed) {\n                playerState = \"stand\";\n                player.x = playerTargetX;\n                playerTargetX = undefined;\n            }\n        };\n\n        const turnOnAnimations = () => {\n            player.animations.play('walk', 8, true);\n            if(activePrisoner) {\n                activePrisoner.animations.play('walk', 8, true);\n            }\n        };\n\n        const turnOffAnimations = () => {\n            player.animations.stop('walk', true);\n            if(activePrisoner) {\n                activePrisoner.animations.stop('walk', true);\n            }\n        };\n\n        const moveToPrisoner = () => {\n            if(isIntersect(player, clickedPrisoner)) {\n                let cellSprite = cells[clickedPrisoner.cellIndex];\n                cellSprite.animations.play('open', 15, false);\n                gateOpenSound.play();\n                clickedPrisoner.inputEnabled = false;\n                clickedPrisoner.state = 'followingPlayer';\n                clickedPrisoner.y = player.y;\n                activePrisoner = clickedPrisoner;\n                playerState = 'stand';\n                let cell = cellContents[clickedPrisoner.cellIndex];\n                let prisonerIndex = cell.indexOf(clickedPrisoner);\n                cell[prisonerIndex] = null;\n                let otherPrisoner = cell[(prisonerIndex + 1) % 2];\n                clickedPrisoner.anger = 0;\n                clickedPrisoner.camaraderie = 0;\n                if (otherPrisoner) {\n                    otherPrisoner.anger = 0;\n                    otherPrisoner.camaraderie = 0;\n                }\n                clickedPrisoner.cellIndex = null;\n                clickedPrisoner = null;\n                activePrisoner.bringToTop();\n            } else {\n                playerTargetX = clickedPrisoner.x;\n                moveToTargetSpace();\n            }\n        };\n\n        const doExecution = () => {\n            axeMurderTimer++;\n            player.x = choppingBlock.x - 64;\n            activePrisoner.x = choppingBlock.x + activePrisoner.height / Math.sqrt(2);\n            activePrisoner.angle = -45;\n            if (!axe) {\n                axe = game.add.sprite(player.x + 15, player.y - 36, 'axe');\n                axe.scale.setTo(0, 0);\n                axe.anchor.setTo(0.6, 1);\n            }\n\n            if (axeMurderTimer >= 0 && axeMurderTimer < 30) {\n                const scale = lerp(0, 1, axeMurderTimer / 30);\n                axe.scale.setTo(scale, scale);\n                screamSound.play();\n            } else if (axeMurderTimer >= 30 && axeMurderTimer < 60) {\n                swingSound.play();\n                const ang = lerp(0, -45, (axeMurderTimer - 30) / 30);\n                axe.angle = ang;\n            } else if (axeMurderTimer >= 60 && axeMurderTimer < 80) {\n                const ang = lerp(-45, 120, (axeMurderTimer - 60) / 20);\n                axe.angle = ang;\n            } else {\n                axe.destroy();\n                axe = undefined;\n                activePrisoner.destroy();\n                prisoners.splice(prisoners.indexOf(activePrisoner), 1);\n                activePrisoner = undefined;\n                playerState = 'stand';\n                axeMurderTimer = 0;\n                score += 10;\n                updateScore();\n\n                grindProgress = 0;\n                animateAxeLoading();\n                axeGrind.animations.play('grind', 10, true);\n                grindAxeSound.play();\n                grindingAxe.alpha = 1;\n            }\n        };\n\n        const checkClicks = function() {\n            checkClickOnChoppingBlock();\n            checkClickOnLadder();\n            checkClickOnSpace();\n            checkClickOnWaitingRoom();\n            checkClickOnCell();\n            checkClickOnPrisoner();\n        };\n\n        ({\n            stand: () => {\n                clickedPrisoner = null;\n                turnOffAnimations();\n                checkClicks();\n            },\n            moveladder: () => {\n                clickedPrisoner = null;\n                turnOnAnimations();\n                moveToTargetLadder();\n                checkClicks();\n            },\n            moveToCell: () => {\n                clickedPrisoner = null;\n                maybeLockHimUp();\n                turnOnAnimations();\n                moveToTargetSpace();\n                checkClicks();\n            },\n            move: () => {\n                clickedPrisoner = null;\n                turnOnAnimations();\n                moveToTargetSpace();\n                checkClicks();\n            },\n            climb: () => {\n                clickedPrisoner = null;\n                turnOnAnimations();\n                climb();\n            },\n            moveWaitingRoom: () => {\n                clickedPrisoner = null;\n                maybeAttendPrisoner();\n                turnOnAnimations();\n                moveToTargetSpace();\n                checkClicks();\n            },\n            moveToPrisoner: () => {\n                turnOnAnimations();\n                moveToPrisoner();\n                checkClicks();\n            },\n            moveToBlock: () => {\n                clickedPrisoner = null;\n                maybeExecutePrisoner();\n                turnOnAnimations();\n                moveToTargetSpace();\n                checkClicks();\n            },\n            murder: () => {\n                clickedPrisoner = null;\n                turnOffAnimations();\n                doExecution();\n            }\n        })[playerState]();\n    }\n\n    function updatePrisoners() {\n        // if (Math.random() * 100 > 99) {\n        if (debugOn && space.isDown && !lastSpace) {\n            newPrisonerArrival();\n        }\n\n        const moveForwardInLine = (prisoners, prisoner) => {\n            const amIBumpingIntoTheNextGuyInLineAndIfSoWhoIsIt = intersectsAny(prisoners, prisoner, (them) => them.x > prisoner.x);\n            if (isIntersect(prisoner, ladderA) ||\n                amIBumpingIntoTheNextGuyInLineAndIfSoWhoIsIt) {\n                prisoner.state = 'waitingroom';\n            } else {\n                prisoner.state = 'entering';\n                prisoner.x += 200/60;\n            }\n        };\n\n        const bideTimeInCell = function(prisoner) {\n            prisoner.inputEnabled = !activePrisoner;\n            let cell = cellContents[prisoner.cellIndex];\n            let hatedThings = cell.filter((toCheck) => {\n                return toCheck && toCheck.race === raceRelationsMap[prisoner.race];\n            });\n            if(hatedThings.length > 0) {\n                prisoner.anger++;\n            }\n            let helpfulThings = cell.filter((toCheck) => {\n                return toCheck && toCheck !== prisoner&& toCheck.race === prisoner.race;\n            });\n            if(helpfulThings.length > 0) {\n                prisoner.camaraderie++;\n            }\n\n            if(prisoner.anger > 300) {\n                hatedThings.forEach((thing) => {\n                    prisonMurderSound.play();\n                    const killThisIdx = cell.indexOf(thing);\n                    cell[killThisIdx] = null;\n                    destroyPrisoner(thing);\n                    score += 10;\n                    updateScore();\n                });\n                prisoner.anger = 0;\n            }\n\n            if(prisoner.camaraderie > 480) {\n                prisoner.state = 'escape';\n                prisoner.camaraderie = 0;\n                currEscapeSound = (currEscapeSound + 1) % 2;\n                escapeSounds[currEscapeSound].play();\n\n            }\n        };\n\n        const escape = function(prisoner) {\n            if (prisoner.y > 200 && isIntersect(prisoner, ladderA)) {\n                prisoner.x = ladderA.centerX;\n                prisoner.y -= playerClimbSpeed;\n            } else {\n                if(prisoner.y > 200) {\n                    prisoner.y = levelYs[1]; // prisoner needs to be on lower floor walkway\n                } else {\n                    prisoner.y = levelYs[0];\n                }\n                prisoner.x -= playerWalkSpeed;\n            }\n\n            if (prisoner.x <= 190) { // 190 is the right edge of the door\n                destroyPrisoner(prisoner);\n                console.log('prisoner escaped!1!!');\n                takeLife();\n            }\n        };\n\n        prisoners.forEach((prisoner, idx) => {\n            if (!prisoner.alive) {\n                console.warn(\"attempted to update dead prisoner\", prisoner);\n                return; // skip him, he's been deleted and did not disappear somehow\n            }\n\n            ({\n                entering: () => {\n                    moveForwardInLine(waitingPrisoners, prisoner);\n                },\n                waitingroom: () => {\n                    moveForwardInLine(waitingPrisoners, prisoner);\n                },\n                followingPlayer: () => {\n                    prisoner.inputEnabled = false;\n                },\n                thrownIn: () => {\n                    bideTimeInCell(prisoner);\n                },\n                murder: () => {\n                    // TODO\n                },\n                escape: () => {\n                    prisoner.inputEnabled = false;\n                    let cell = cellContents[prisoner.cellIndex];\n                    cell[cell.indexOf(prisoner)] = null;\n                    escape(prisoner);\n                }\n            })[prisoner.state]();\n        });\n    }\n\n    function updateScore() {\n        scoreText.text = 'Score: ' + score.toString().padStart(6, '0');\n        if(score % 50 === 0) {\n            nextPrisonerDelay = nextPrisonerDelay > 120 ? nextPrisonerDelay - 30 : 120;\n        }\n    }\n\n    function takeLife() {\n        let heartSprite = heartSprites.shift();\n        if(heartSprite) {\n            heartSprite.destroy();\n            if(heartSprites.length < 1) {\n                game.state.start('GameOver');\n            }\n        }\n    }\n\n    function animateAxeLoading() {\n        const sections = 4;\n        const fps = 60;\n        const animationFps = fps / (grindDuration / (sections - 1));\n        axeLoader.animations.play('load', animationFps, false);\n    }\n\n    function isSameFloor(object1, object2) {\n        return object1.y && object2.y && (200 - object1.y) * (200 - object2.y) > 0;\n    }\n\n    /***********************************************************************************************************\n     * update helpers\n     */\n    function newPrisonerArrival() {\n        // lose a life for every prisoner that cannot fit into the queue\n        let lastPrisoner = waitingPrisoners[waitingPrisoners.length - 1];\n        if(lastPrisoner &&  lastPrisoner.x - prisonerSpawnX <= 16) {\n            takeLife();\n            return;\n        }\n        // pick random race\n        const race = races[Math.floor(Math.random() * races.length)];\n        let prisoner = game.add.sprite(prisonerSpawnX, levelYs[0], race);\n        prisoner.animations.add('walk');\n        prisoners.push(prisoner);\n        waitingPrisoners.push(prisoner);\n        prisoner.race = race;\n        prisoner.state = 'entering'; // entering, waitingroom\n        prisoner.anchor.setTo(0.5, 1);\n    }\n\n    function destroyPrisoner(prisoner) {\n        const idx = prisoners.indexOf(prisoner);\n        if (idx === -1) {\n            console.warn(\"Tried to destroy a prisoner but couldn't find him.\");\n        }\n        const vacateThis = findCellAndSlot(prisoner);\n        if (vacateThis) {\n            cellContents[vacateThis[0]][vacateThis[1]];\n        }\n\n        prisoners.splice(idx, 1);\n        prisoner.destroy();\n    }\n\n    function findCellAndSlot(prisoner) {\n        for (let c = 0; c < cellContents.length; c++) {\n            const cell = cellContents[c];\n            for (let s = 0; s < cell.length; s++) {\n                const pris = cell[c];\n                if (prisoner === pris)\n                    return [c, s];\n            }\n        }\n        return null;\n    }\n\n    function isIntersect(a, b) {\n        return Phaser.Rectangle.intersects(a.getBounds(), b.getBounds());\n    }\n\n    function intersectsAny(arrayOfThings, you, alsoSatisfy) {\n        /** if `you` intersects with anything in the array,\n        * return the first thing in the `arrayOfThings` that is intersecting.\n        * else null.\n        */\n       if (!alsoSatisfy) {\n           alsoSatisfy = (thing) => true;\n        }\n        for (let thing of arrayOfThings) {\n            if (thing === you) {\n                // can't collide with yourself\n                continue;\n            }\n            if (isIntersect(thing, you)) {\n                if (alsoSatisfy(thing)) {\n                    return thing;\n                }\n            }\n        }\n        return null;\n    };\n\n    function spawnPointer(x, y) {\n        let pointer = game.add.sprite(x, y, 'pointer');\n        pointer.anchor.setTo(0.5, 1);\n        const what = setInterval(() => {\n            pointer.alpha -= 0.05;\n            pointer.width += 0.5;\n            pointer.height += 0.5;\n            if (pointer.alpha <= 0) {\n                pointer.destroy();\n                clearInterval(what);\n            }\n        }, 16);\n    }\n\n    function spawnGlow(x, y, glow) {\n        // glow.anchor.setTo(0.5, 1);\n        // glow.x += glow.width/2;\n        // glow.y += glow.height;\n        // uncomment if you want to resize about the center\n        glow.alpha = 0;\n        glow.x = x;\n        glow.y = y;\n        glow.bringToTop();\n\n        let t = 0;\n        const id = setInterval(() => {\n            t += Math.PI / 30;\n            glow.alpha = Math.sin(t);\n            if (t >= Math.PI) {\n                glow.alpha = 0;\n                clearInterval(id);\n            }\n        }, 16);\n    }\n\n    function lerp(from, to, amt) {\n        return (1 - amt) * from + amt * to;\n    }\n\n    function render() {\n        if(debugOn) {\n            for (let prisoner of prisoners) {\n                game.debug.text(prisoner.state, prisoner.x - 32, prisoner.y - 64, \"green\");\n            }\n            for (let i = 0; i < cellContents.length; i++) {\n                const theCell = cellContents[i];\n                const formattedResidents = theCell.map((res) => {\n                    if (res === null) { return 'null'; }\n                    if (res === undefined) { return 'undefined'; }\n                    if (!res.race) { return '???'; }\n                    return res.race;\n                });\n                game.debug.text(`${theCell.length}: [${formattedResidents.join(',')}]`, 0, i * 16 + 400);\n            }\n            game.debug.text('grind progress: ' + grindProgress, 0, 6*16 + 400);\n            game.debug.text('activePrisoner: ' + (activePrisoner ? activePrisoner.race : '___'), 0, 7*16 + 400);\n            game.debug.text('clickedPrisoner: ' + (clickedPrisoner ? clickedPrisoner.race : '___'), 0, 8*16 + 400);\n            game.debug.text(playerState, player.x - 32, player.y - 64, \"white\");\n        }\n\n    }\n\n    return {preload, create, update, render};\n}\n","export default function prisonersInstructionsState(game) {\n\n    let instructionsTextStyle = { font: '10pt Press Start 2P', fill: 'white', align: 'left', wordWrap: true, wordWrapWidth: game.width-60};\n\n    const races = [ 'elf', 'hobbit', 'usurper', 'rebel', 'goblin', 'ogre' ];\n    const descriptions = [\n        'Their nobility provokes the rebel, causing him to start a fight he can\\'t win.',\n        'They can outsmart (and eliminate) goblins.',\n        'They can dominate simple-minded ogres.',\n        'Hates the bourgeois usurpers.',\n        'Hatred of elves runs deep in this species.',\n        'Eats little hobbitses.'\n    ];\n\n    function preload() {\n        \n    }\n\n    function create() {\n        let backButtonStyle = { font: '10pt Press Start 2P', fill: '#FFFFFF', align: 'left'};\n        let backButton = game.add.text(60, 30, '< Back', backButtonStyle);\n\n        let raceButtonStyle = { font: '10pt Press Start 2P', fill: '#FFFFFF', align: 'right'};\n        let raceButton = game.add.text(game.world.width - 270, 30, 'Prisoners (cont.) >', raceButtonStyle);\n\n        backButton.inputEnabled = true;\n        backButton.events.onInputUp.add(function () {\n            game.state.start('Instructions');\n        });\n\n        raceButton.inputEnabled = true;\n            raceButton.events.onInputUp.add(() => {\n                game.state.start('Races');\n        });\n\n        let startY = 90;\n        let spriteX = 60;\n        let nameX = 120;\n        let descriptionX = 256;\n        let currY = startY;\n\n        races.forEach((raceName, i) => {\n            let prisoner = game.add.sprite(spriteX, currY, raceName);\n            prisoner.animations.add('walk');\n            prisoner.animations.play('walk', 8, true);\n            prisoner.anchor.setTo(0, 0.5);\n\n            game.add.text(nameX, currY, raceName, instructionsTextStyle);\n            game.add.text(descriptionX, currY, descriptions[i], instructionsTextStyle);\n            currY += 80;\n        });\n    }\n\n    return {preload, create};\n}","import playState from './play-state';\n\nexport default function raceRelationsState(game) {\n\n    let arrowTextStyle = { font: '10pt Press Start 2P', fill: 'white', align: 'left', wordWrap: true, wordWrapWidth: game.width-60};\n\n    const races = [ 'elf', 'hobbit', 'usurper', 'rebel', 'goblin', 'ogre' ];\n    const raceRelationsMap = {\n        'goblin': 'elf', // goblins hate elves, a hatred as old as the two races\n        'elf': 'rebel', // elves are nobler than rebels, causing the rebels to instigate a fight they can't win\n        'rebel': 'usurper', // rebels hate bourgeois usurpers; class struggle is real\n        'usurper': 'ogre', // usurpers dominate ogres; their commanding presence whittles away at the ogre\n        'ogre': 'hobbit', // ogres eat hobbits, and they are hungry\n        'hobbit': 'goblin', // hobbits outsmart goblins\n    };\n\n    let raceInstructions = 'Here is a diagram of the relationships between the prisoner types:';\n\n    function preload() {\n        \n    }\n\n    function create() {\n        let backButtonStyle = { font: '10pt Press Start 2P', fill: '#FFFFFF', align: 'left'};\n        let playButtonStyle = { font: '20pt Press Start 2P', fill: '#FFFFFF', align: 'left'};\n        let backButton = game.add.text(60, 30, '< Back', backButtonStyle);\n        var startOption = game.add.text(game.world.width - 220, 30, 'Start', playButtonStyle);\n\n        startOption.inputEnabled = true;\n        startOption.events.onInputUp.add(function () {\n            game.state.add('Play', playState(game));\n            game.state.start('Play');\n        });\n\n        backButton.inputEnabled = true;\n        backButton.events.onInputUp.add(function () {\n            game.state.start('Prisoners');\n        });\n\n        let colStartX = 60;\n        let startY = 240;\n        let spriteXOffset = 0;\n        let spriteX2Offset = 85;\n        let arrowXOffset = 55;\n        let currY = startY;\n\n        races.forEach((raceName, i) => {\n            currY = ((i + 1) % 3) * 90 + startY;\n            if(i > 2) {\n                colStartX = 512;\n            }\n            let prisoner = game.add.sprite(colStartX + spriteXOffset, currY, raceName);\n            prisoner.animations.add('walk');\n            prisoner.animations.play('walk', 8, true);\n            prisoner.anchor.setTo(0, 0.5);\n\n            let prisoner2 = game.add.sprite(colStartX + spriteX2Offset, currY, raceRelationsMap[raceName]);\n            prisoner2.animations.add('walk');\n            prisoner2.animations.play('walk', 8, true);\n            prisoner2.anchor.setTo(0, 0.5);\n\n            game.add.text(colStartX + arrowXOffset, currY, '>', arrowTextStyle);\n            \n        });\n\n        let aboutText = game.add.text(60, 90, raceInstructions, arrowTextStyle);\n    }\n\n    return {preload, create};\n}","export default function torchHandler(game) {\n\n    let torchX = [225, 548, 718, 548, 718];\n    let torchY = [111, 111, 111, 271, 271];\n\n    return {\n        placeTorches: function() {\n            for(var i = 0; i < torchX.length; ++i) {\n                let torch = game.add.sprite(torchX[i], torchY[i], 'torch');\n                let light = torch.animations.add('light');\n                torch.animations.play('light', 12, true);\n            }\n        }\n    };\n\n}\n"],"sourceRoot":""}